spring.application.name=salve-food-api
#keycloak
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:9080/realms/salve
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://localhost:9080/realms/salve/protocol/openid-connect/certs
spring.security.oauth2.authorizationserver.endpoint.oidc.logout-uri=http://localhost:9080/realms/salve/protocol/openid-connect/logout
keycloak.admin.username=adminsalve
keycloak.admin.password=adminsalve
keycloak.admin.realm-uri=http://localhost:9080/realms/master
keycloak.admin.create-user-uri=http://localhost:9080/admin/realms/salve/users
#datasource
spring.datasource.url=jdbc:postgresql://localhost:5434/salve-food
spring.datasource.username=usuario
spring.datasource.password=salve-food
spring.jpa.hibernate.ddl-auto=update
spring.datasource.driver-class-name=org.postgresql.Driver

# Logging
logging.level.org.springframework=INFO
logging.level.com.salvefood=DEBUG

# Server
server.port=8080

spring.servlet.multipart.max-file-size=10MB

#meu ip local para teste - no futuro o publico sera usado
local.ip=192.168.0.6

# minio
minio.url=http://${local.ip}:9001
minio.access-key=RoNHWxprGCgAVlnhOGbi
minio.secret-key=4f8FWguq4ZkWphPIGCATdsR7uFUmwuGhi2HzL4at

#public server
public.server.url=http://${local.ip}

#cors configuration, isso ai Ã© pra os url que podem acessar a api sem problemas
application.url=,http://localhost:3000,http://localhost:8080, http://:8080,http://:3000, ${public.server.url}:3000, ${public.server.url}:8080
